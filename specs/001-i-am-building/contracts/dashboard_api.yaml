openapi: 3.0.0
info:
  title: Email Classifier Dashboard API
  description: |
    RESTful API for monitoring and managing the email classification system.
    Provides real-time metrics, manual operations, and system health endpoints.
    Built with FastAPI, designed for integration with React dashboard and Grafana.
  version: 1.0.0
  contact:
    name: Email Classifier System
    email: "self@local"
servers:
  - url: http://localhost:8000
    description: Local development server (FastAPI)
  - url: http://localhost:9090
    description: Prometheus metrics endpoint
  - url: http://localhost:8080
    description: Dashboard API
  - url: http://localhost:3000
    description: Grafana (historical analysis)
components:
  schemas:
    CurrentMetrics:
      type: object
      required:
        - avg_processing_time_ms
        - avg_tags_per_email
        - queue_depth
        - active_workers
        - system_uptime_seconds
      properties:
        avg_processing_time_ms:
          type: number
          description: Average email classification time (milliseconds)
          example: 2450.5
        avg_tags_per_email:
          type: number
          description: Average number of tags assigned per email
          example: 2.3
        queue_depth:
          type: integer
          description: Current number of pending emails in queue
          example: 3
        active_workers:
          type: integer
          description: Number of active classification workers
          example: 2
        system_uptime_seconds:
          type: integer
          description: System uptime in seconds
          example: 123456
        classification_rate_per_hour:
          type: number
          description: Emails classified per hour (rolling 24h average)
          example: 45.2
        unclassified_rate_percent:
          type: number
          description: Percentage of emails below confidence threshold
          example: 5.2
        rag_hit_rate_percent:
          type: number
          description: Percentage of classifications using RAG context
          example: 78.9

    TimeSeriesData:
      type: object
      required:
        - data
        - total
        - period
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - timestamp
              - value
            properties:
              timestamp:
                type: string
                format: date-time
                description: Timestamp for data point
              value:
                type: number
                description: Metric value
              labels:
                type: object
                description: Metric labels (category, confidence_bucket, etc.)
                example:
                  category: academic.exams
                  confidence_bucket: 0.8-1.0
          description: Array of time-series data points
        total:
          type: integer
          description: Total number of data points in series
          example: 288
        period:
          type: string
          enum: [1h, 24h, 7d, 30d]
          description: Time period covered by the data

    HistoricalMetrics:
      type: object
      description: Aggregated metrics for time range
      properties:
        period:
          type: string
          enum: [1h, 24h, 7d, 30d]
        metrics:
          type: array
          items:
            type: object
            required:
              - name
              - value
              - unit
            properties:
              name:
                type: string
                description: Metric name
                example: avg_processing_time_ms
              value:
                type: number
                description: Aggregated value
                example: 2450.5
              unit:
                type: string
                description: Measurement unit
                example: ms

    HealthStatus:
      type: object
      required:
        - overall_status
        - components
        - timestamp
      properties:
        overall_status:
          type: string
          enum: [healthy, degraded, down]
          description: Overall system health
          example: healthy
        timestamp:
          type: string
          format: date-time
          description: When health check was performed
        components:
          type: array
          items:
            type: object
            required:
              - component_name
              - status
            properties:
              component_name:
                type: string
                description: Component identifier
                example: ollama
              status:
                type: string
                enum: [healthy, degraded, down]
                example: healthy
              last_check:
                type: string
                format: date-time
                example: "2025-10-03T07:00:00Z"
              latency_ms:
                type: number
                nullable: true
                description: Response time in milliseconds
                example: 45
              error:
                type: string
                nullable: true
                description: Error message if degraded/down
                example: "Connection timeout"

    ClassificationList:
      type: array
      description: Recent email classifications
      items:
        type: object
        required:
          - message_id
          - sender
          - subject
          - primary_category
          - confidence
        properties:
          message_id:
            type: string
            description: Email message ID
            example: "1234567890"
          sender:
            type: string
            description: Anonymized sender (domain for privacy)
            example: "university.edu"
          subject:
            type: string
            description: Email subject (truncated to 50 chars)
            example: "Midterm Exam Schedule - CS101"
          primary_category:
            type: string
            description: Primary hierarchical category
            example: "academic.exams"
          secondary_categories:
            type: array
            items:
              type: string
            example: ["action.deadline_soon"]
          confidence:
            type: number
            description: Classification confidence
            example: 0.87
          processing_time_ms:
            type: integer
            description: Time to classify this email
            example: 2345
          processed_timestamp:
            type: string
            format: date-time
            example: "2025-10-03T06:45:12Z"
          sentiment:
            type: string
            enum: [positive, neutral, negative, urgent]
            example: neutral

    ReclassifyRequest:
      type: object
      required:
        - message_ids
      properties:
        message_ids:
          type: array
          items:
            type: string
            description: List of message IDs to reclassify
          example: ["1234567890", "0987654321"]
        reason:
          type: string
          description: Optional reason for reclassification
          example: "Taxonomy updated"

    ReclassifyResponse:
      type: object
      required:
        - accepted
        - message_ids
        - estimated_completion
      properties:
        accepted:
          type: boolean
          description: Whether reclassification was accepted
          example: true
        message_ids:
          type: array
          items:
            type: string
          example: ["1234567890", "0987654321"]
        estimated_completion:
          type: string
          format: date-time
          description: When reclassification expected to complete
          example: "2025-10-03T06:50:00Z"

    AdminActionResponse:
      type: object
      required:
        - action
        - status
        - message
      properties:
        action:
          type: string
          enum: [rag_reindex, clear_queue, restart_worker]
          example: rag_reindex
        status:
          type: string
          enum: [accepted, rejected, completed]
          example: accepted
        message:
          type: string
          description: Action result message
          example: "RAG reindexing started in background"

    ErrorResponse:
      type: object
      description: Standardized error format
      properties:
        error:
          type: string
          description: Error message
          example: "Schema validation failed"
        error_type:
          type: string
          enum: [validation_error, timeout_error, internal_error, unauthorized]
          example: validation_error
        timestamp:
          type: string
          format: date-time
          example: "2025-10-03T07:00:00Z"
        details:
          type: object
          nullable: true
          description: Detailed error information

paths:
  /metrics/current:
    get:
      summary: Get current real-time metrics
      description: Returns the latest 5-second aggregated metrics snapshot
      tags:
        - metrics
      responses:
        "200":
          description: Current metrics snapshot
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentMetrics"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /metrics/timeseries:
    get:
      summary: Get historical time-series metrics
      description: Returns aggregated metrics for specified time period
      tags:
        - metrics
      parameters:
        - name: metric
          in: query
          required: true
          schema:
            type: string
            description: Metric name
            example: avg_processing_time_ms
        - name: period
          in: query
          required: false
          schema:
            type: string
            enum: [1h, 24h, 7d, 30d]
            default: 24h
          description: Time period for aggregation
        - name: category_filter
          in: query
          required: false
          schema:
            type: string
            description: Optional category filter
            example: academic.exams
      responses:
        "200":
          description: Time-series data points
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeSeriesData"
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /metrics/historical:
    get:
      summary: Get aggregated historical metrics
      description: Returns summary statistics for specified time range
      tags:
        - metrics
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
            enum: [1h, 24h, 7d, 30d]
      responses:
        "200":
          description: Aggregated historical metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistoricalMetrics"
        "400":
          description: Invalid period
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /health:
    get:
      summary: System health status
      description: Returns health status for all system components
      tags:
        - health
      responses:
        "200":
          description: Health status for all components
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
        "500":
          description: Health check failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /classifications:
    get:
      summary: Get recent classifications
      description: Returns list of recently processed emails
      tags:
        - classifications
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: Number of recent classifications to return
        - name: confidence_min
          in: query
          required: false
          schema:
            type: number
            minimum: 0
            maximum: 1
            default: 0
          description: Minimum confidence score filter
        - name: category
          in: query
          required: false
          schema:
            type: string
            description: Filter by primary category
            example: academic.exams
        - name: priority
          in: query
          required: false
          schema:
            type: string
            enum: [low, normal, high, urgent]
            description: Filter by priority
      responses:
        "200":
          description: List of recent classifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClassificationList"
        "400":
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /classifications/reclassify:
    post:
      summary: Trigger manual reclassification
      description: Queues specified emails for reclassification
      tags:
        - classifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReclassifyRequest"
      responses:
        "202":
          description: Reclassification accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReclassifyResponse"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Message IDs not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /admin/rag/reindex:
    post:
      summary: Trigger full RAG knowledge base reindex
      description: Rebuilds vector index from all historical data
      tags:
        - admin
      security:
        - basicAuth: []
      responses:
        "202":
          description: Reindex accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminActionResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal error during reindex request

  /admin/queue/clear:
    post:
      summary: Clear error queue (poison messages)
      description: Removes quarantined messages from processing queue
      tags:
        - admin
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                confirm:
                  type: boolean
                  description: Confirmation flag
                  example: true
                reason:
                  type: string
                  description: Reason for clearing queue
                  example: "Development cleanup"
              required:
                - confirm
      responses:
        "200":
          description: Queue cleared successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminActionResponse"
        "400":
          description: Confirmation missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized

  /admin/restart-worker:
    post:
      summary: Restart classification worker
      description: Restarts the classification processing worker
      tags:
        - admin
      security:
        - basicAuth: []
      responses:
        "202":
          description: Restart initiated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdminActionResponse"
        "401":
          description: Unauthorized

securitySchemes:
  basicAuth:
    type: http
    scheme: basic
    description: Basic authentication for admin endpoints
